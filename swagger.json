{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "Goosetrack project (group 1) backend V1 API docs.",
    "description": "API documentation for GoIT Goosetrack project (group 1)",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },

  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],

  "servers": [
    { "url": "https://goosetrack-18hi.onrender.com/api/v1" },
    { "url": "https://localhost:3001/api/v1" }
  ],

  "tags": [
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Reviews",
      "description": "Reviews endpoints"
    },
    {
      "name": "Tasks",
      "description": "Tasks endpoints"
    }
  ],

  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "User registration",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Registration request body object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Joi validation error",
            "content": {}
          },
          "409": {
            "description": "Email example@example.com is in use",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },

    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User authentication",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Login request body object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Joi validation error || Email or password is wrong",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },

    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersCurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },

    "/users/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "No content (logged out successfully)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },

    "/users/edit": {
      "patch": {
        "tags": ["Users"],
        "summary": "User update",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's update object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UsersUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success. User updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "423": {
            "description": "Locked. You have no necessary permissions to update user role",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },
    "/reviews": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get all reviews",
        "parameters": [],
        "security": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewsGetAllResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },

    "/reviews/own": {
      "post": {
        "tags": ["Reviews"],
        "summary": "Add user's review",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's new review object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostOwnReviewRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostOwnReviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Joi validation error",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden. You can not leave more than 1 review",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },

      "get": {
        "tags": ["Reviews"],
        "summary": "Get user's review",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrPatchOwnReviewResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "User ${name} have no any review",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },

      "patch": {
        "tags": ["Reviews"],
        "summary": "Update user's review",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Edited review data object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchOwnReviewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrPatchOwnReviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Joi validation error",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "User ${name} have no any review",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },

      "delete": {
        "tags": ["Reviews"],
        "summary": "Delete user's review",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Review to delete doesn't exist for ${name} user",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },

    "/tasks": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get all tasks (without search query) and Get tasks per month (with search query in format YYYY-MM)",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "required": false,
            "description": "Month in format YYYY-MM",
            "schema": {
              "type": "string"
            },
            "example": "2023-08"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTasksResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Tasks"],
        "summary": "Add user's task",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's new task object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostOwnTaskRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostOwnTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Joi validation error",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    },

    "/tasks/{id}": {
      "patch": {
        "tags": ["Tasks"],
        "summary": "Update user's task by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Task id",
            "schema": {
              "type": "string"
            },
            "example": "64ed2156127207102d86a0fd"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Patched task object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchOwnTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchOwnTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Joi validation error",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          },
          "423": {
            "description": "Locked. You have no necessary permissions to update task owner",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete user's task by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Task id",
            "schema": {
              "type": "string"
            },
            "example": "64ed2156127207102d86a0fd"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Task deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Id is not valid",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Name Surname"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        },
        "example": {
          "name": "Name Surname",
          "email": "user@example.com",
          "password": "qwe12345"
        }
      },

      "RegistrationResponse": {
        "type": "object",
        "required": ["status", "message"],
        "properties": {
          "status": {
            "type": "number",
            "description": "Response status",
            "example": "200"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Success"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Name Surname"
              },
              "email": {
                "type": "string",
                "format": "email",
                "example": "user@example.com"
              }
            }
          }
        },
        "example": {
          "status": 201,
          "message": "Success",
          "user": {
            "name": "Name Surname",
            "email": "user@example.com"
          }
        }
      },

      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        },
        "example": {
          "name": "Name Surname",
          "email": "user@example.com"
        }
      },

      "LoginResponse": {
        "type": "object",
        "required": ["status", "message"],
        "properties": {
          "status": {
            "type": "number",
            "description": "Response status",
            "example": "200"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Success"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Name Surname"
              },
              "email": {
                "type": "string",
                "format": "email",
                "example": "user@example.com"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "String"
          }
        },
        "example": {
          "status": 200,
          "message": "Success",
          "user": {
            "name": "Name Surname",
            "email": "user@example.com"
          },
          "token": "string"
        }
      },

      "UsersCurrentResponse": {
        "type": "object",
        "required": ["status", "message"],
        "properties": {
          "status": {
            "type": "number",
            "description": "Response status",
            "example": "200"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Success"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Name Surname"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "example": "user@example.com"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar url",
                "example": "https://s.gravatar.com/avatar/93e9084ab289b7f1f5e4ab6716a56c3b?s=100&r=x&d=retro"
              },
              "phone": {
                "type": "string",
                "description": "User's phone number",
                "example": "!!!!!"
              },
              "skype": {
                "type": "string",
                "description": "User's skype",
                "example": "!!!!!"
              },
              "birthdate": {
                "type": "string",
                "description": "User's birthdate",
                "example": "!!!!!"
              },
              "role": {
                "type": "string",
                "description": "User's role",
                "example": "!!!!!"
              },
              "theme": {
                "type": "string",
                "description": "User's theme",
                "example": "!!!!!"
              },
              "createdAt": {
                "type": "string",
                "description": "Date of user creation",
                "example": "!!!!!"
              },
              "updatedAt": {
                "type": "string",
                "description": "Date of user update",
                "example": "!!!!!"
              }
            }
          }
        },
        "example": {
          "status": 200,
          "message": "Success",
          "user": {
            "name": "Name Surname",
            "email": "user@example.com",
            "avatarURL": "https://s.gravatar.com/avatar/93e9084ab289b7f1f5e4ab6716a56c3b?s=100&r=x&d=retro",
            "phone": "",
            "skype": "",
            "birthdate": "",
            "role": "user",
            "theme": "light",
            "createdAt": "2023-08-27T07:40:05.960Z",
            "updatedAt": "2023-08-28T09:30:34.756Z"
          }
        }
      },

      "UsersUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Name Surname"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "user@example.com"
          },
          "avatarURL": {
            "type": "file",
            "description": "User's avatar file",
            "example": "*.jpg || *.png || *.gif || *.webp"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number",
            "example": "+38 (067) 111-2345"
          },
          "skype": {
            "type": "string",
            "description": "User's skype",
            "example": "ExAmPle123eXaMpLe"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "2000-12-31"
          },
          "role": {
            "type": "string",
            "description": "User's role",
            "enum": ["user", "admin"],
            "example": "user"
          },
          "theme": {
            "type": "string",
            "description": "User's theme",
            "enum": ["light", "dark"],
            "example": "light"
          }
        },
        "example": {
          "name": "Name Surname",
          "email": "user@example.com",
          "avatarURL": "566tghyuji.jpg",
          "phone": "+38 (067) 111-2345",
          "skype": "ExAmPle123eXaMpLe",
          "role": "user",
          "birthdate": "2000-12-31",
          "theme": "light"
        }
      },
      "UsersUpdateResponse": {
        "type": "object",
        "required": ["status", "message"],
        "properties": {
          "status": {
            "type": "number",
            "description": "Response status",
            "example": "200"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Success. User update controller"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Name Surname"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "example": "user@example.com"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar url",
                "example": "https://s.gravatar.com/avatar/93e9084ab289b7f1f5e4ab6716a56c3b?s=100&r=x&d=retro"
              },
              "phone": {
                "type": "string",
                "description": "User's phone number",
                "example": "+38 (067) 111-2345"
              },
              "skype": {
                "type": "string",
                "description": "User's skype",
                "example": "ExAmPle123eXaMpLe"
              },
              "birthdate": {
                "type": "2000-12-31",
                "description": "User's birthdate",
                "example": "2000-12-31"
              },
              "role": {
                "type": "string",
                "description": "User's role",
                "example": "user"
              },
              "theme": {
                "type": "string",
                "description": "User's theme",
                "example": "light"
              },
              "createdAt": {
                "type": "string",
                "description": "Date of user creation",
                "example": "2023-08-27T06:55:05.960Z"
              },
              "updatedAt": {
                "type": "string",
                "description": "Date of user update",
                "example": "2023-08-27T08:30:34.756Z"
              }
            }
          }
        },
        "example": {
          "status": 200,
          "message": "Success",
          "user": {
            "name": "Name Surname",
            "email": "user@example.com",
            "avatarURL": "https://s.gravatar.com/avatar/93e9084ab289b7f1f5e4ab6716a56c3b?s=100&r=x&d=retro",
            "phone": "+38 (067) 111-2345",
            "skype": "ExAmPle123eXaMpLe",
            "birthdate": "2000-12-31",
            "role": "user",
            "theme": "light",
            "createdAt": "2023-08-27T06:55:05.960Z",
            "updatedAt": "2023-08-27T08:30:34.756Z"
          }
        }
      },

      "ReviewsGetAllResponse": {
        "type": "object",
        "required":["status", "message", "reviews"],
        "properties": {
          "status": {
            "type": "number",
            "description": "Response status",
            "example": "200"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Success"
          },
          "reviews": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "642fdf8745ab73b2aeuuae7b",
                "description": "Backend-generated unique identifier."
              },
              "content": {
                "type": "string",
                "description": "Review text",
                "example": "Very nice useful and convenient app. Thanks!"
              },
              "rating": {
                "type": "number",
                "description": "Number of stars",
                "minimum": 1,
                "maximum": 5,
                "example": 4
              },
              "owner": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Reviewer's name",
                    "example": "Name Surname"
                  },
                  "avatarUrl": {
                    "type": "string",
                    "description": "Reviewer's avatar",
                    "example": "https://s.gravatar.com/avatar/93e9084ab289b7f1f5e4ab6716a56c3b?s=100&r=x&d=retro"
                  },
                  "role": {
                    "type": "string",
                    "enum": "",
                    "description": "Reviewer's role",
                    "example": "user"
                  }
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "example": "2023-08-27T07:28:49.493Z",
                "description": "Backend-generated date and time of task creating"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2023-08-28T07:28:49.493Z",
                "description": "Backend-generated date and time of task updating"
              }
            }
          }
        },
        "example": {
          "status": 200,
          "message": "Success",
          "reviews": [
            {
              "_id": "642fdf8745ab73b2aeuuae7b",
              "content": "Very nice useful and convenient app. Thanks!",
              "rating": 5,
              "owner": {
                "name": "Kateryna Hilcher",
                "avatarURL": "https://res.cloudinary.com/dquabwb70/image/upload/v1693154941/avatars/64eb7e128621908512127fff.jpg",
                "role": "user"
              },
              "createdAt": "2023-08-27T22:02:11.566Z",
              "updatedAt": "2023-08-28T22:02:11.566Z"
            }
          ]
        }
      },

      "PostOwnReviewRequest": {
        "type": "object",
        "required": ["content", "rating"],
        "properties": {
          "content": {
            "type": "string",
            "description": "Review text",
            "example": "Very nice useful and convenient app. Thanks!"
          },
          "rating": {
            "type": "number",
            "description": "Number of stars",
            "minimum": 1,
            "maximum": 5,
            "example": 4
          }
        },
        "example": {
          "content": "Very nice useful and convenient app. Thanks!",
          "rating": "5"
        }
      },

      "PostOwnReviewResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "description": "Response status",
            "example": "201"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Success"
          },
          "review": {
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "description": "Review text",
                "example": "Very nice useful and convenient app. Thanks!"
              },
              "rating": {
                "type": "number",
                "description": "Number of stars",
                "minimum": 1,
                "maximum": 5,
                "example": 4
              },
              "owner": {
                "type": "string",
                "description": "Owner ID",
                "example": "64f25b6348e8d48f8f75b47c"
              },
              "_id": {
                "type": "string",
                "description": "Review ID",
                "example": "64e883dd67a3af5a9ddcc3e6"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "example": "2023-08-27T07:28:49.493Z",
                "description": "Backend-generated date and time of task creating"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2023-08-28T07:28:49.493Z",
                "description": "Backend-generated date and time of task updating"
              }
            }
          }
        },

        "example": {
          "status": 201,
          "message": "Success",
          "review": {
            "content": "I like this app so much",
            "rating": 5,
            "owner": "64f25b6348e8d48f8f75b47c",
            "_id": "64e883dd67a3af5a9ddcc3e6",
            "createdAt": "2023-08-28T22:36:06.580Z",
            "updatedAt": "2023-08-28T22:36:06.580Z"
          }
        }
      },

      "PatchOwnReviewRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "content": {
            "type": "string",
            "description": "Review text",
            "example": "Very nice useful and convenient app. Thanks!"
          },
          "rating": {
            "type": "number",
            "description": "Number of stars",
            "minimum": 1,
            "maximum": 5,
            "example": 4
          }
        },
        "example": {
          "content": "Very nice useful and convenient app. Thanks!",
          "rating": "5"
        }
      },

      

      "GetOrPatchOwnReviewResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "description": "Response status",
            "example": "200"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Success"
          },
          "review": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "642fdf8745ab73b2aeuuae7b",
                "description": "Backend-generated unique identifier."
              },
              "content": {
                "type": "string",
                "description": "Review text",
                "example": "Very nice useful and convenient app. Thanks!"
              },
              "rating": {
                "type": "number",
                "description": "Number of stars",
                "minimum": 1,
                "maximum": 5,
                "example": 4
              },
              "owner": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Reviewer's name",
                    "example": "Name Surname"
                  },
                  "avatarUrl": {
                    "type": "string",
                    "description": "Reviewer's image",
                    "example": "https://s.gravatar.com/avatar/93e9084ab289b7f1f5e4ab6716a56c3b?s=100&r=x&d=retro"
                  },
                  "role": {
                    "type": "string",
                    "enum": "",
                    "description": "Reviewer's role",
                    "example": "user"
                  }
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "example": "2023-08-27T07:28:49.493Z",
                "description": "Backend-generated date and time of task creating"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2023-08-28T07:28:49.493Z",
                "description": "Backend-generated date and time of task updating"
              }
            }
          }
        },
        "example": {
          "status": 200,
          "message": "Success",
          "review": {
            "_id": "64ed2156127207102d86a0fd",
            "content": "Very nice useful and convenient app. Thanks!",
            "rating": 4,
            "owner": {
              "name": "Name Surname",
              "avatarURL": "https://res.cloudinary.com/dquabwb70/image/upload/v1693154941/avatars/64eb7e128621908512127fff.jpg",
              "role": "user"
            },
            "createdAt": "2023-08-28T22:36:06.580Z",
            "updatedAt": "2023-08-28T22:36:06.580Z"
          }
        }
      },

      "GetTasksResponse": {
        "type": "object",
        "required": ["status", "message"],
        "properties": {
          "status": {
            "type": "number",
            "description": "Response status",
            "example": "200"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Success"
          },
          "tasks": {
            "type": "array",
            "properties": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "642fdf8745ab73b2aeuuae7b",
                  "description": "Backend-generated unique identifier."
                },
                "title": {
                  "type": "string",
                  "description": "Task title",
                  "example": "GoIT homework"
                },
                "start": {
                  "type": "string",
                  "description": "Task start time",
                  "example": "09:00"
                },
                "end": {
                  "type": "string",
                  "description": "Task end time",
                  "example": "12:00"
                },
                "priority": {
                  "type": "string",
                  "enum": ["low", "medium", "high"],
                  "default": "low",
                  "example": "low"
                },
                "date": {
                  "type": "string",
                  "match": "dateRegexp",
                  "example": "2023-08-28"
                },
                "category": {
                  "type": "string",
                  "enum": ["to-do", "in-progress", "done"],
                  "example": "to-do"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Reviewer's name",
                      "example": "Name Surname"
                    },
                    "email": {
                      "type": "string",
                      "description": "User's email",
                      "example": "user@example.com"
                    },
                    "avatarUrl": {
                      "type": "string",
                      "description": "Reviewer's image",
                      "example": "https://s.gravatar.com/avatar/93e9084ab289b7f1f5e4ab6716a56c3b?s=100&r=x&d=retro"
                    }
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-08-27T07:28:49.493Z",
                  "description": "Backend-generated date and time of task creating"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-08-28T07:28:49.493Z",
                  "description": "Backend-generated date and time of task updating"
                }
              }
            }
          }
        },
        "example": {
          "status": 200,
          "message": "Success",
          "tasks": [
            {
              "_id": "64ede71dc35f467491e1e669",
              "title": "GoIT homework",
              "start": "09:00",
              "end": "12:00",
              "priority": "low",
              "date": "2023-08-28",
              "category": "to-do",
              "owner": {
                "name": "Name Surname",
                "email": "user@example.com",
                "avatarURL": "https://s.gravatar.com/avatar/93e9084ab289b7f1f5e4ab6716a56c3b?s=100&r=x&d=retro"
              },
              "createdAt": "2023-08-29T12:39:57.288Z",
              "updatedAt": "2023-08-29T12:39:57.288Z"
            }
          ]
        }
      },

      "PostOwnTaskRequest": {
        "type": "object",
        "required": ["title", "start", "end", "priority", "category", "date"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "GoIT homework"
          },
          "start": {
            "type": "string",
            "description": "Task start time",
            "example": "09:00"
          },
          "end": {
            "type": "string",
            "description": "Task end time",
            "example": "12:00"
          },
          "priority": {
            "type": "string",
            "enum": ["low", "medium", "high"],
            "default": "low",
            "example": "low"
          },
          "date": {
            "type": "string",
            "match": "dateRegexp",
            "example": "2023-08-28"
          },
          "category": {
            "type": "string",
            "enum": ["to-do", "in-progress", "done"],
            "example": "to-do"
          }
        },
        "example": {
            "title": "GoIT homework",
            "start": "09:00",
            "end": "12:00",
            "priority": "low",
            "date": "2023-08-28",
            "category": "to-do"
        }
      },

      "PostOwnTaskResponse": {
        "type": "object",
        "required": ["status", "message"],
        "properties": {
          "status": {
            "type": "number",
            "description": "Response status",
            "example": "201"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Success"
          },
          "task": {
            "type": "object",
            "required": [
              "title",
              "start",
              "end",
              "priority",
              "date",
              "category"
            ],
            "properties": {
              "title": {
                "type": "string",
                "description": "Task title",
                "example": "GoIT homework"
              },
              "start": {
                "type": "string",
                "description": "Task start time",
                "example": "09:00"
              },
              "end": {
                "type": "string",
                "description": "Task end time",
                "example": "12:00"
              },
              "priority": {
                "type": "string",
                "enum": ["low", "medium", "high"],
                "default": "low",
                "example": "low"
              },
              "date": {
                "type": "string",
                "match": "dateRegexp",
                "example": "2023-08-28"
              },
              "category": {
                "type": "string",
                "enum": ["to-do", "in-progress", "done"],
                "example": "to-do"
              }
            }
          }
        },
        "example": {
          "status": 201,
          "message": "Success",
          "task": {
            "title": "GoIT homework",
            "start": "09:00",
            "end": "12:00",
            "priority": "low",
            "date": "2023-08-28",
            "category": "to-do"
          }
        }
      },

      "PatchOwnTaskRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "GoIT homework"
          },
          "start": {
            "type": "string",
            "description": "Task start time",
            "example": "09:00"
          },
          "end": {
            "type": "string",
            "description": "Task end time",
            "example": "12:00"
          },
          "priority": {
            "type": "string",
            "enum": ["low", "medium", "high"],
            "default": "low",
            "example": "low"
          },
          "date": {
            "type": "string",
            "match": "dateRegexp",
            "example": "2023-08-28"
          },
          "category": {
            "type": "string",
            "enum": ["to-do", "in-progress", "done"],
            "example": "to-do"
          }
        },
        "example": {
          "title": "GoIT homework",
          "start": "09:00",
          "end": "12:00",
          "priority": "low",
          "date": "2023-08-28",
          "category": "to-do"
        }
      },

      "PatchOwnTaskResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "description": "Response status",
            "example": "201"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Success"
          },
          "task": {
            "type": "object",
            "required": [
              "title",
              "start",
              "end",
              "priority",
              "date",
              "category"
            ],
            "properties": {
              "title": {
                "type": "string",
                "description": "Task title",
                "example": "GoIT homework"
              },
              "start": {
                "type": "string",
                "description": "Task start time",
                "example": "09:00"
              },
              "end": {
                "type": "string",
                "description": "Task end time",
                "example": "12:00"
              },
              "priority": {
                "type": "string",
                "enum": ["low", "medium", "high"],
                "default": "low",
                "example": "low"
              },
              "date": {
                "type": "string",
                "match": "dateRegexp",
                "example": "2023-08-28"
              },
              "category": {
                "type": "string",
                "enum": ["to-do", "in-progress", "done"],
                "example": "to-do"
              }
            }
          }
        },
        "example": {
          "status": 201,
          "message": "Success",
          "task": {
            "title": "GoIT homework",
            "start": "09:00",
            "end": "12:00",
            "priority": "low",
            "date": "2023-08-28",
            "category": "to-do"
          }
        }
      },

      "DeleteTaskResponse": {
        "type": "object",
        "required": ["status", "message"],
        "properties": {
          "status": {
            "type": "number",
            "description": "Response status",
            "example": "200"
          },
          "message": {
            "type": "string",
            "description": "Response message",
            "example": "Task deleted"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
